import rclpy
from rclpy.node import Node
from geometry_msgs.msg import Twist

class OpenLoopController(Node):
    def __init__(self):
        super().__init__('tb_openLoop')
        self.publisher = self.create_publisher(Twist, '/cmd_vel', 10)
        self.start_time = self.get_clock().now()
        self.timer = self.create_timer(0.1, self.control_loop)

    def control_loop(self):
        elapsed_time = (self.get_clock().now() - self.start_time).nanoseconds / 1e9
        msg = Twist()

        if elapsed_time < 10:
            msg.linear.x = 0.1
            self.get_logger().info(f"Moving with constant velocity: {msg.linear.x}")
        else:
            msg.linear.x = 0.0
            self.get_logger().info("Stopped")

        self.publisher.publish(msg)

def main(args=None):
    rclpy.init(args=args)
    node = OpenLoopController()
    rclpy.spin(node)
    node.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()

